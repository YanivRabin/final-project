// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: process.env.FIREBASE_API_KEY,
  authDomain: "finalproject-de046.firebaseapp.com",
  projectId: "finalproject-de046",
  storageBucket: "finalproject-de046.appspot.com",
  messagingSenderId: "634114730889",
  appId: "1:634114730889:web:e4df6cc8417ce98c788f58",
  measurementId: "G-ENKNNN47QK"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);
const auth = firebase.auth();

// Email and Password Authentication
function registerWithEmailPassword(email, password) {
  return auth.createUserWithEmailAndPassword(email, password)
    .then((userCredential) => {
      const user = userCredential.user;
      console.log('User registered:', user);
      return user;
    })
    .catch((error) => {
      console.error('Error registering:', error);
      throw error;
    });
}

function loginWithEmailPassword(email, password) {
  return auth.signInWithEmailAndPassword(email, password)
    .then((userCredential) => {
      const user = userCredential.user;
      console.log('User logged in:', user);
      return user;
    })
    .catch((error) => {
      console.error('Error logging in:', error);
      throw error;
    });
}

// Google Authentication
const googleProvider = new firebase.auth.GoogleAuthProvider();

function signInWithGoogle() {
  return auth.signInWithPopup(googleProvider)
    .then((result) => {
      const credential = result.credential;
      const token = credential.accessToken;
      const user = result.user;
      console.log('User signed in with Google:', user);
      return { user, token };
    })
    .catch((error) => {
      console.error('Error with Google sign-in:', error);
      throw error;
    });
}

// Facebook Authentication
const facebookProvider = new firebase.auth.FacebookAuthProvider();

function signInWithFacebook() {
  return auth.signInWithPopup(facebookProvider)
    .then((result) => {
      const credential = result.credential;
      const token = credential.accessToken;
      const user = result.user;
      console.log('User signed in with Facebook:', user);
      return { user, token };
    })
    .catch((error) => {
      console.error('Error with Facebook sign-in:', error);
      throw error;
    });
}

// Apple Authentication
const appleProvider = new firebase.auth.OAuthProvider('apple.com');

function signInWithApple() {
  return auth.signInWithPopup(appleProvider)
    .then((result) => {
      const credential = result.credential;
      const token = credential.accessToken;
      const user = result.user;
      console.log('User signed in with Apple:', user);
      return { user, token };
    })
    .catch((error) => {
      console.error('Error with Apple sign-in:', error);
      throw error;
    });
}
